services:
  codex-build: &codex-build
    env_file:
      - .env
    build:
      context: .
      dockerfile: build.Dockerfile
      args:
        BUILDER_VERSION: "$BUILDER_VERSION"
    image: codex-build
    container_name: codex-build
  codex-frontend-lint:
    <<: *codex-build
    container_name: codex-frontent-lint
    command: ./lint-frontend.sh
  codex-frontend-test:
    <<: *codex-build
    container_name: codex-frontend-test
    command: ./test-frontend.sh
    volumes:
      - ./test-results/:/app/test-results/
  codex-frontend-build:
    <<: *codex-build
    container_name: codex-frontend-build
    volumes:
      - ./codex/static_build:/app/codex/static_build
    command: ./build-frontend.sh
  codex-backend-test:
    <<: *codex-build
    container_name: codex-backend-test
    volumes:
      - ./codex/static_build:/app/codex/static_build
      - ./codex/static_root:/app/codex/static_root
      - ./test-results/:/app/test-results/
    command: ./test-backend.sh
  codex-backend-lint:
    <<: *codex-build
    container_name: codex-backend-lint
    command: ./lint-backend.sh
  codex-build-dist:
    <<: *codex-build
    container_name: codex-build-dist
    volumes:
      - ./codex/static_root:/app/codex/static_root
      - ./dist/:/app/dist/
    command: ./build-dist.sh
  codex-wheels:
    env_file:
      - .env
    build:
      context: .
      dockerfile: wheels.Dockerfile
      args:
        WHEEL_BUILDER_VERSION: "$WHEEL_BUILDER_VERSION"
        WHEELS_VERSION: "$WHEELS_VERSION"
    image: docker.io/ajslater/codex-wheels
    container_name: codex-wheels
  codex:
    env_file:
      - .env
    build:
      context: .
      args:
        CODEX_WHEEL: "$CODEX_WHEEL"
        RUNNABLE_BASE_VERSION: "$RUNNABLE_BASE_VERSION"
        WHEELS_VERSION: "$WHEELS_VERSION"
    image: docker.io/ajslater/codex
    container_name: codex
    environment:
      - LOGLEVEL=DEBUG
    ports:
      - "9810:9810"
    volumes:
      - ./config:/config
      - ./comics:/comics:ro
