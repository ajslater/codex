executors:
  latest-image:
    machine:
      image: ubuntu-2004:202111-02
      docker_layer_caching: true
jobs:
  build:
    executor: latest-image
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ .Revision }}
      - run:
          command: ./docker/docker-login.sh
          name: Login to Docker Hub
      - run:
          command: ./docker/docker-install-binfmt-platforms.sh
          name: Install binfmt platforms
      - run:
          command: ./docker/docker-buildx-create.sh
          name: Create buildx builder
      - run:
          command: ./docker-build-codex-base.sh
          name: Build Base
      - run:
          command: ./docker-build-codex-builder.sh
          name: Build Builder
      - run:
          command: ./docker-build-codex-wheels.sh
          name: Build Wheels
          no_output_timeout: 90m
      - run:
          command: ./docker-build-codex-dist-builder.sh
          name: Build Tester & Dist Builder
          no_output_timeout: 90m
      - run:
          command: ./docker/docker-compose-exit.sh codex-frontend-lint
          name: "Frontend: Lint"
      - run:
          command: ./docker/docker-compose-exit.sh codex-frontend-test
          name: "Frontend: Test"
      - store_test_results:
          path: test-results/jest
      - run:
          command: ./docker/docker-compose-exit.sh codex-frontend-build
          name: "Frontend: Build"
      - run:
          command: ./docker/docker-compose-exit.sh codex-backend-test
          name: "Backend: Lint & Test"
      - run:
          command: ./docker/docker-compose-exit.sh codex-backend-lint
          name: "Backend: Extra Linters"
      - store_test_results:
          path: test-results/pytest
      - store_artifacts:
          path: test-results/coverage
      - store_artifacts:
          path: frontend/coverage
      - run:
          command: ./docker/docker-compose-exit.sh codex-build-dist
          name: Build Distribution
      - save_cache:
          key: v1-{{ .Revision }}
          paths:
            - dist
      - persist_to_workspace:
          paths:
            - ./.env
            - ./.env.platforms
            - ./Dockerfile
            - ./builder-requirements.txt
            - ./dist
            - ./docker
            - ./docker-build-codex.sh
            - ./pypi-deploy.sh
          root: .
  deploy:
    executor: latest-image
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: v1-{{ .Revision }}
      - run:
          command: ./docker/docker-login.sh
          name: Login to Docker Hub
      - run:
          command: ./docker/docker-install-binfmt-platforms.sh
          name: Install binfmt platforms
      - run:
          command: ./docker/docker-buildx-create.sh
          name: Create buildx builder
      - run:
          command: ./docker-build-codex.sh
          name: Build & Push Codex runnable image
      - run:
          command: ./pypi-deploy.sh
          name: Publish Package to PyPi
version: 2.1
workflows:
  main:
    jobs:
      - build:
          filters:
            branches:
              only:
                - develop
                - release
                - /.*-ci/
      - deploy:
          filters:
            branches:
              only:
                - release
          requires:
            - build
  version: 2.1
