# Generated by Django 3.0.4 on 2020-03-17 01:35

import django.db.models.deletion

from django.conf import settings
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "name",
                    models.CharField(max_length=32, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CreditRole",
            fields=[
                (
                    "name",
                    models.CharField(max_length=16, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "name",
                    models.CharField(max_length=32, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "name",
                    models.CharField(max_length=32, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Publisher",
            fields=[
                (
                    "name",
                    models.CharField(max_length=32, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RootPath",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.FileField(unique=True, upload_to="")),
                ("scan_frequency", models.DurationField()),
                ("last_scan", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="SeriesGroup",
            fields=[
                (
                    "name",
                    models.CharField(max_length=32, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StoryArc",
            fields=[
                (
                    "name",
                    models.CharField(max_length=32, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "name",
                    models.CharField(max_length=16, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "name",
                    models.CharField(max_length=32, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Series",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32)),
                ("year", models.PositiveSmallIntegerField(null=True)),
                ("volume", models.PositiveSmallIntegerField(null=True)),
            ],
            options={"unique_together": {("name", "year", "volume")},},
        ),
        migrations.CreateModel(
            name="Imprint",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32)),
                (
                    "publisher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="codex.Publisher",
                    ),
                ),
            ],
            options={"unique_together": {("name", "publisher")},},
        ),
        migrations.CreateModel(
            name="Credit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("person", models.CharField(max_length=32)),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="codex.CreditRole",
                    ),
                ),
            ],
            options={"unique_together": {("person", "role")},},
        ),
        migrations.CreateModel(
            name="Comic",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.FileField(null=True, upload_to="")),
                ("issue", models.PositiveSmallIntegerField()),
                ("language", models.CharField(max_length=2, null=True)),
                ("title", models.CharField(max_length=64, null=True)),
                ("publish_date", models.DateField(null=True)),
                ("volume", models.PositiveSmallIntegerField(null=True)),
                ("comments", models.TextField(null=True)),
                ("issue_count", models.PositiveSmallIntegerField(null=True)),
                ("read_ltr", models.BooleanField(default=True)),
                ("critical_rating", models.CharField(max_length=32, null=True)),
                ("alternate_issue", models.PositiveSmallIntegerField(null=True)),
                ("alternate_issue_count", models.PositiveSmallIntegerField(null=True)),
                ("black_and_white", models.BooleanField(default=False)),
                ("manga", models.BooleanField(default=False)),
                ("maturity_rating", models.CharField(max_length=32, null=True)),
                ("notes", models.TextField(null=True)),
                ("scan_info", models.CharField(max_length=32, null=True)),
                ("web", models.URLField(null=True)),
                ("country", models.CharField(max_length=2, null=True)),
                ("user_rating", models.CharField(max_length=32, null=True)),
                ("volume_count", models.PositiveSmallIntegerField(null=True)),
                ("cover_image", models.FileField(null=True, upload_to="")),
                ("description", models.TextField(null=True)),
                ("book_format", models.CharField(max_length=16, null=True)),
                ("identifier", models.CharField(max_length=64, null=True)),
                ("last_mark", models.PositiveSmallIntegerField(null=True)),
                (
                    "price",
                    models.DecimalField(decimal_places=2, max_digits=9, null=True),
                ),
                ("rights", models.CharField(max_length=64, null=True)),
                ("page_count", models.PositiveSmallIntegerField()),
                ("is_version_of", models.CharField(max_length=64, null=True)),
                (
                    "alternate_series",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="alternate_comics",
                        to="codex.Series",
                    ),
                ),
                ("characters", models.ManyToManyField(to="codex.Character")),
                ("credits", models.ManyToManyField(to="codex.Credit")),
                (
                    "genre",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="codex.Genre",
                    ),
                ),
                (
                    "imprint",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="codex.Imprint",
                    ),
                ),
                ("locations", models.ManyToManyField(to="codex.Location")),
                (
                    "publisher",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="codex.Publisher",
                    ),
                ),
                (
                    "root_path",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="codex.RootPath"
                    ),
                ),
                (
                    "series",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="codex.Series"
                    ),
                ),
                (
                    "series_group",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="codex.SeriesGroup",
                    ),
                ),
                (
                    "story_arc",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="codex.StoryArc",
                    ),
                ),
                ("tags", models.ManyToManyField(to="codex.Tag")),
                ("teams", models.ManyToManyField(to="codex.Team")),
            ],
        ),
        migrations.CreateModel(
            name="UserComic",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bookmark", models.PositiveSmallIntegerField()),
                ("finished", models.BooleanField()),
                ("rating", models.PositiveSmallIntegerField()),
                (
                    "comic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="codex.Comic"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"unique_together": {("user", "comic")},},
        ),
    ]
